AWSTemplateFormatVersion: 2010-09-09
Transform: AWS::Serverless-2016-10-31
Description: Create a AWS CodePipeline to Operationalize a Machine Learning Model.
Parameters:
  ImageRepoName:
    Type: String
    Description: Name of the ECR repo without the image name.
    Default: abalone
  ImageTagName:
    Type: String
    Description: Name of the ECR image tag.
    Default: latest
  ModelName:
    Type: String
    Description: Name of the model.
    Default: abalone
  RoleName:
    Type: String
    Description: Name of the Pipeline execution Role.
    Default: MLOps
Resources:
  CreateModelGroup:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: create-model-group-${ModelName}
      Description: Function to create a SageMaker Model Package Group.
      Handler: lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          MODEL_NAME:
            Ref: ModelName
      CodeUri: s3://mlops-us-east-1-886568458983/abalone-pipeline/artifacts/242ae95a3e86c841a6134f3d972bc48d
      Tags:
        Name:
          Fn::Sub: create-model-group-${ModelName}
  PackageGroup:
    Type: Custom::PackageGroup
    Properties:
      ServiceToken:
        Fn::GetAtt:
        - CreateModelGroup
        - Arn
  TrainingLaunchJob:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: training-launch-job-${ModelName}
      Description: Function to start a new Sagemaker Training Job.
      Handler: lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          PIPELINE_NAME:
            Fn::Sub: ${AWS::StackName}
          MODEL_NAME:
            Ref: ModelName
      CodeUri: s3://mlops-us-east-1-886568458983/abalone-pipeline/artifacts/1650e75a6e4c4b684b3016901def947b
      Tags:
        Name:
          Fn::Sub: training-launch-job-${ModelName}
  EtlLaunchJob:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: etl-launch-job-${ModelName}
      Description: Function that will start a new Glue ETL Job.
      Handler: lambda.handler
      MemorySize: 128
      Role:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          PIPELINE_NAME:
            Fn::Sub: ${AWS::StackName}
          MODEL_NAME:
            Ref: ModelName
      CodeUri: s3://mlops-us-east-1-886568458983/abalone-pipeline/artifacts/c3e3faa3faef8db182fd53dc9ed6192d
      Tags:
        Name:
          Fn::Sub: etl-launch-job-${ModelName}
  TrainingJobMonitor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: training-job-monitor-${ModelName}
      Description: Function that will monitor that status of the SageMaker Training
        Job.
      Handler: lambda.handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Runtime: python3.8
      Timeout: 60
      CodeUri: s3://mlops-us-east-1-886568458983/abalone-pipeline/artifacts/8a86a6cccad01a9d81cde005a5e455b9
      Environment:
        Variables:
          PIPELINE_NAME:
            Fn::Sub: ${AWS::StackName}
          MODEL_NAME:
            Ref: ModelName
      Tags:
        Name:
          Fn::Sub: training-job-monitor-${ModelName}
  EtlJobMonitor:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName:
        Fn::Sub: etl-job-monitor-${ModelName}
      Description: Function that will monitor that status of the Glue ETL Job.
      Handler: lambda.handler
      MemorySize: 512
      Role:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Runtime: python3.8
      Timeout: 60
      Environment:
        Variables:
          PIPELINE_NAME:
            Fn::Sub: ${AWS::StackName}
          MODEL_NAME:
            Ref: ModelName
      CodeUri: s3://mlops-us-east-1-886568458983/abalone-pipeline/artifacts/9778b126d6d85bff81af621740e7f3a2
      Tags:
        Name:
          Fn::Sub: etl-job-monitor-${ModelName}
  TrainingJobMonitorPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: training-job-monitor-${ModelName}
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - TrainingJobMonitoringEvent
        - Arn
    DependsOn: TrainingJobMonitor
  EtlJobMonitorPermissions:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::Sub: etl-job-monitor-${ModelName}
      Principal: events.amazonaws.com
      SourceArn:
        Fn::GetAtt:
        - EtlJobMonitoringEvent
        - Arn
    DependsOn: EtlJobMonitor
  TrainingJobMonitoringEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Event that will monitor the training job and inform codepipeline
        as it finishes.
      Name:
        Fn::Sub: training-job-monitor-${ModelName}
      ScheduleExpression: cron(0/1 * * * ? *)
      State: DISABLED
      Targets:
      - Arn:
          Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:training-job-monitor-${ModelName}
        Id:
          Fn::Sub: training-event-${ModelName}
    DependsOn: TrainingJobMonitor
  EtlJobMonitoringEvent:
    Type: AWS::Events::Rule
    Properties:
      Description: Event that will monitor the gluejob and inform codepipeline as
        it finishes.
      Name:
        Fn::Sub: etl-job-monitor-${ModelName}
      ScheduleExpression: cron(0/1 * * * ? *)
      State: DISABLED
      Targets:
      - Arn:
          Fn::Sub: arn:aws:lambda:${AWS::Region}:${AWS::AccountId}:function:etl-job-monitor-${ModelName}
        Id:
          Fn::Sub: etl-event-${ModelName}
    DependsOn: EtlJobMonitor
  BuildImageProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: mlops-buildimage-${ModelName}
      Description: Build the Model Training and Inference Image.
      ServiceRole:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: "Version: 0.2\nphases:\n  install:\n    runtime-versions:\n   \
          \   python: 3.8\n  pre_build:\n    commands:\n      - printenv\n      -\
          \ echo Updating Packages ...\n      - pip install --upgrade --force-reinstall\
          \ botocore boto3 awscli\n  build:\n    Commands:\n      - echo Build started\
          \ on `date`\n      - echo Logging in to the Amazon Deep Learning Contain\
          \ Repository ...\n      - aws ecr get-login-password --region us-west-2\
          \ | docker login --username AWS --password-stdin 763104351884.dkr.ecr.us-west-2.amazonaws.com\n\
          \      - echo Building the Container image...\n      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG\
          \ .\n      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG\n\
          \  post_build:\n    commands:\n      - echo Logging in to ECR Repository...\n\
          \      - $(aws ecr get-login --no-include-email --region $AWS_DEFAULT_REGION)\n\
          \      - echo Pushing the Container image...\n      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG\n\
          \    finally:\n      - echo Build completed on `date`\n"
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: IMAGE_REPO_NAME
          Value:
            Ref: ImageRepoName
        - Name: IMAGE_TAG
          Value:
            Ref: ImageTagName
        - Name: AWS_ACCOUNT_ID
          Value:
            Fn::Sub: ${AWS::AccountId}
        - Name: AWS_DEFAULT_REGION
          Value:
            Fn::Sub: ${AWS::Region}
      Tags:
      - Key: Name
        Value:
          Fn::Sub: mlops-buildimage-${ModelName}
  BuildDeploymentProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: mlops-build-deployment-${ModelName}
      Description: Builds the required resource properties for the deployment.
      ServiceRole:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
        - Name: PIPELINE_NAME
          Value:
            Fn::Sub: ${AWS::StackName}
        - Name: IMAGE_REPO_NAME
          Value:
            Ref: ImageRepoName
        - Name: MODEL_NAME
          Value:
            Ref: ModelName
        - Name: IMAGE_TAG
          Value:
            Ref: ImageTagName
        - Name: MODEL_GROUP
          Value:
            Fn::GetAtt:
            - PackageGroup
            - Name
      Tags:
      - Key: Name
        Value:
          Fn::Sub: mlops-build-deployment-${ModelName}
  BuildWorkflowProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name:
        Fn::Sub: mlops-buildworkflow-${ModelName}
      Description: Create Step Functions Workflow for System Test.
      ServiceRole:
        Fn::GetAtt:
        - MLOpsRole
        - Arn
      Artifacts:
        Type: CODEPIPELINE
      Source:
        Type: CODEPIPELINE
        BuildSpec: buildspec.yml
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_LARGE
        Image: aws/codebuild/standard:4.0
        PrivilegedMode: true
        EnvironmentVariables:
        - Name: IMAGE_REPO_NAME
          Value:
            Ref: ImageRepoName
        - Name: IMAGE_TAG
          Value:
            Ref: ImageTagName
        - Name: MODEL_NAME
          Value:
            Ref: ModelName
        - Name: PIPELINE_BUCKET
          Value:
            Fn::Sub: mlops-${AWS::Region}-${AWS::AccountId}
        - Name: WORKFLOW_NAME
          Value:
            Fn::Sub: ${AWS::StackName}-systemtest
        - Name: PIPELINE_NAME
          Value:
            Fn::Sub: ${AWS::StackName}
        - Name: MODEL_GROUP
          Value:
            Fn::GetAtt:
            - PackageGroup
            - Name
      Tags:
      - Key: Name
        Value:
          Fn::Sub: mlops-buildworkflow-${ModelName}
  MLOpsPipeline:
    Type: AWS::CodePipeline::Pipeline
    Properties:
      Name:
        Fn::Sub: ${AWS::StackName}
      RoleArn:
        Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${RoleName}
      ArtifactStore:
        Type: S3
        Location:
          Fn::Sub: mlops-${AWS::Region}-${AWS::AccountId}
      Stages:
      - Name: Source
        Actions:
        - Name: ModelSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: CodeCommit
          OutputArtifacts:
          - Name: ModelSourceOutput
          Configuration:
            BranchName: master
            RepositoryName: mlops
            PollForSourceChanges: true
          RunOrder: 1
        - Name: ETLSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: CodeCommit
          OutputArtifacts:
          - Name: EtlSourceOutput
          Configuration:
            BranchName: etl
            RepositoryName: mlops
            PollForSourceChanges: true
          RunOrder: 1
        - Name: DataSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: S3
          OutputArtifacts:
          - Name: DataSourceOutput
          Configuration:
            S3Bucket:
              Fn::Sub: data-${AWS::Region}-${AWS::AccountId}
            S3ObjectKey: input/raw/abalone.csv
            PollForSourceChanges: true
          RunOrder: 1
        - Name: TestSource
          ActionTypeId:
            Category: Source
            Owner: AWS
            Version: '1'
            Provider: CodeCommit
          OutputArtifacts:
          - Name: TestSourceOutput
          Configuration:
            BranchName: test
            RepositoryName: mlops
            PollForSourceChanges: true
          RunOrder: 1
      - Name: Build
        Actions:
        - Name: BuildImage
          InputArtifacts:
          - Name: ModelSourceOutput
          OutputArtifacts:
          - Name: BuildImageOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          Configuration:
            ProjectName:
              Ref: BuildImageProject
          RunOrder: 1
      - Name: ETL
        Actions:
        - Name: GlueJob
          InputArtifacts:
          - Name: EtlSourceOutput
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: '1'
            Provider: Lambda
          Configuration:
            FunctionName:
              Ref: EtlLaunchJob
          RunOrder: 1
      - Name: ETLApproval
        Actions:
        - Name: ApproveETL
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: '1'
            Provider: Manual
          Configuration:
            CustomData: Did the Glue ETL Job run successfully?
          RunOrder: 1
      - Name: Train
        Actions:
        - Name: TrainModel
          InputArtifacts:
          - Name: ModelSourceOutput
          OutputArtifacts:
          - Name: ModelTrainOutput
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: '1'
            Provider: Lambda
          Configuration:
            FunctionName:
              Ref: TrainingLaunchJob
            UserParameters:
              Fn::Sub: mlops-pipeline-${ModelName}
          RunOrder: 1
      - Name: TrainApproval
        Actions:
        - Name: ApproveTrain
          ActionTypeId:
            Category: Approval
            Owner: AWS
            Version: '1'
            Provider: Manual
          Configuration:
            CustomData: Was this model trained successfully?
          RunOrder: 1
      - Name: DeployDev
        Actions:
        - Name: BuildDevDeployment
          InputArtifacts:
          - Name: ModelSourceOutput
          OutputArtifacts:
          - Name: BuildDevOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          Configuration:
            ProjectName:
              Ref: BuildDeploymentProject
            EnvironmentVariables: '[{"name":"STAGE","value":"Dev","type":"PLAINTEXT"}]'
          RunOrder: 1
        - Name: DeployDevModel
          InputArtifacts:
          - Name: BuildDevOutput
          OutputArtifacts:
          - Name: DeployDevOutput
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: CloudFormation
          Configuration:
            ActionMode: REPLACE_ON_FAILURE
            RoleArn:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${RoleName}
            Capabilities: CAPABILITY_NAMED_IAM
            StackName:
              Fn::Sub: ${AWS::StackName}-deploy-dev
            TemplateConfiguration: BuildDevOutput::Dev-config-export.json
            TemplatePath: BuildDevOutput::deploy-model-Dev.yml
          RunOrder: 2
      - Name: SystemTest
        Actions:
        - Name: BuildTestingWorkflow
          InputArtifacts:
          - Name: TestSourceOutput
          OutputArtifacts:
          - Name: BuildTestingWorkflowOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          Configuration:
            ProjectName:
              Ref: BuildWorkflowProject
          RunOrder: 1
        - Name: ExecuteSystemTest
          InputArtifacts:
          - Name: BuildTestingWorkflowOutput
          OutputArtifacts:
          - Name: SystemTestingOutput
          ActionTypeId:
            Category: Invoke
            Owner: AWS
            Version: '1'
            Provider: StepFunctions
          Configuration:
            StateMachineArn:
              Fn::Sub: arn:aws:states:${AWS::Region}:${AWS::AccountId}:stateMachine:${AWS::StackName}-systemtest
            InputType: FilePath
            Input: input.json
          RunOrder: 2
      - Name: DeployPrd
        Actions:
        - Name: BuildPrdDeployment
          InputArtifacts:
          - Name: ModelSourceOutput
          OutputArtifacts:
          - Name: BuildPrdOutput
          ActionTypeId:
            Category: Build
            Owner: AWS
            Version: '1'
            Provider: CodeBuild
          Configuration:
            ProjectName:
              Ref: BuildDeploymentProject
            EnvironmentVariables: '[{"name":"STAGE","value":"Prd","type":"PLAINTEXT"}]'
          RunOrder: 1
        - Name: DeployPrdModel
          InputArtifacts:
          - Name: BuildPrdOutput
          OutputArtifacts:
          - Name: DeployPrdOutput
          ActionTypeId:
            Category: Deploy
            Owner: AWS
            Version: '1'
            Provider: CloudFormation
          Configuration:
            ActionMode: CREATE_UPDATE
            RoleArn:
              Fn::Sub: arn:aws:iam::${AWS::AccountId}:role/${RoleName}
            Capabilities: CAPABILITY_NAMED_IAM
            StackName:
              Fn::Sub: ${AWS::StackName}-deploy-prd
            TemplateConfiguration: BuildPrdOutput::Prd-config-export.json
            TemplatePath: BuildPrdOutput::deploy-model-Prd.yml
          RunOrder: 2
  MLOpsRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName:
        Ref: RoleName
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
        - Effect: Allow
          Principal:
            Service:
            - s3.amazonaws.com
            - cloudformation.amazonaws.com
            - events.amazonaws.com
            - glue.amazonaws.com
            - lambda.amazonaws.com
            - sagemaker.amazonaws.com
            - codebuild.amazonaws.com
            - codepipeline.amazonaws.com
            - states.amazonaws.com
          Action:
          - sts:AssumeRole
      Path: /
      Policies:
      - PolicyName: MLOpsPolicy
        PolicyDocument:
          Version: '2012-10-17'
          Statement:
          - Sid: CodeCommitAccess
            Effect: Allow
            Action:
            - codecommit:GetBranch
            - codecommit:GetCommit
            - codecommit:UploadArchive
            - codecommit:GetUploadArchiveStatus
            - codecommit:CancelUploadArchive
            Resource:
            - arn:aws:codecommit:us-west-2:*:mlops
          - Sid: UploadImage
            Effect: Allow
            Action: ecr:*
            Resource: '*'
          - Sid: ECRAuthorizationToken
            Effect: Allow
            Action:
            - ecr:GetAuthorizationToken
            Resource: '*'
          - Sid: CloudWatchMetrics
            Effect: Allow
            Action:
            - cloudwatch:PutMetricData
            - cloudwatch:GetMetricData
            - cloudwatch:GetMetricStatistics
            - cloudwatch:ListMetrics
            - cloudwatch:PutMetricAlarm
            - cloudwatch:DeleteAlarms
            - cloudwatch:DescribeAlarms
            Resource: '*'
          - Sid: CloudWatchLogs
            Effect: Allow
            Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:DescribeLogStreams
            - logs:PutLogEvents
            - logs:GetLogEvents
            Resource: '*'
          - Sid: BucketAccess
            Effect: Allow
            Action:
            - s3:*
            Resource:
            - arn:aws:s3:::data-us-west-2*
            - arn:aws:s3:::data-us-west-2*/*
            - arn:aws:s3:::mlops-us-west-2*
            - arn:aws:s3:::mlops-us-west-2*/*
          - Sid: CloudFormationAccess
            Effect: Allow
            Action:
            - cloudformation:Create*
            - cloudformation:Delete*
            - cloudformation:Describe*
            - cloudformation:Update*
            - cloudformation:List*
            - cloudformation:ExecuteChangeSet
            - cloudformation:GetTemplateSummary
            Resource:
            - arn:aws:cloudformation:us-west-2:*:stack/abalone-pipeline/*
            - arn:aws:cloudformation:us-west-2:*:stack/abalone-pipeline-deploy-dev/*
            - arn:aws:cloudformation:us-west-2:*:stack/abalone-pipeline-deploy-prd/*
            - arn:aws:cloudformation:us-west-2:*:stack/abalone-pipeline-systemtest/*
            - arn:aws:cloudformation:us-west-2:aws:transform/Serverless-2016-10-31
          - Sid: CloudWatchEventsAccess
            Effect: Allow
            Action:
            - events:*
            Resource: '*'
          - Sid: CodeBuildImageAccess
            Effect: Allow
            Action:
            - codebuild:*
            Resource:
            - arn:aws:codebuild:us-west-2:*:project/mlops-buildimage-abalone
            - arn:aws:codebuild:us-west-2:*:project/mlops-abalone-custom-reources
            - arn:aws:codebuild:us-west-2:*:project/mlops-buildworkflow-abalone
            - arn:aws:codebuild:us-west-2:*:project/mlops-build-deployment-abalone
          - Sid: GlueJobResourceAccess
            Effect: Allow
            Action:
            - glue:*
            Resource:
            - arn:aws:glue:us-west-2:*:job/*
          - Sid: LambdaResourceAccess
            Effect: Allow
            Action:
            - lambda:*
            Resource:
            - arn:aws:lambda:us-west-2:*:function:training-launch-job-abalone
            - arn:aws:lambda:us-west-2:*:function:training-job-monitor-abalone
            - arn:aws:lambda:us-west-2:*:function:etl-launch-job-abalone
            - arn:aws:lambda:us-west-2:*:function:etl-job-monitor-abalone
            - arn:aws:lambda:us-west-2:*:function:abalone-pipeline-systemtest-EvaluateEndpointLambda
            - arn:aws:lambda:us-west-2:*:function:abalone-pipeline-systemtest-RegisterModelLambda
            - arn:aws:lambda:us-west-2:*:function:create-model-group-abalone
          - Sid: SageMakerFullAccess
            Effect: Allow
            Action:
            - sagemaker:*
            Resource: '*'
          - Sid: MLOpsPassRole
            Effect: Allow
            Action:
            - iam:PassRole
            Resource:
            - arn:aws:iam::*:role/MLOps
            - arn:aws:iam::*:role/abalone-pipeline-systemtest-WorkflowRole
          - Sid: WorkflowRole
            Effect: Allow
            Action:
            - iam:GetRole
            - iam:GetRolePolicy
            - iam:PutRolePolicy
            - iam:CreateRole
            - iam:DeleteRole
            - iam:AttachRolePolicy
            - iam:DetachRolePolicy
            - iam:DeleteRolePolicy
            Resource:
            - arn:aws:iam::*:role/abalone-pipeline-systemtest-WorkflowRole
          - Sid: WorkflowSSM
            Effect: Allow
            Action:
            - ssm:PutParameter
            - ssm:DeleteParameter
            - ssm:AddTagsToResource
            - ssm:GetParameter
            Resource:
            - arn:aws:ssm:us-west-2:*:parameter/WorkflowExecRole
            - arn:aws:ssm:us-west-2:*:parameter/EvaluateEndpoint
            - arn:aws:ssm:us-west-2:*:parameter/RegisterModel
          - Sid: StepFunctionsAccess
            Effect: Allow
            Action:
            - states:ListStateMachines
            - states:CreateStateMachine
            - states:UpdateStateMachine
            - states:DeleteStateMachine
            - states:DescribeStateMachine
            - states:StartExecution
            - states:DescribeExecution
            Resource:
            - arn:aws:states:us-west-2:*:stateMachine:*
            - arn:aws:states:us-west-2:*:execution:abalone-pipeline-systemtest:*
          - Sid: AutoscalingServiceLinkedRole
            Effect: Allow
            Action:
            - iam:CreateServiceLinkedRole
            Resource:
            - arn:aws:iam::*:role/aws-service-role/sagemaker.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_SageMakerEndpoint
            Condition:
              StringLike:
                iam:AWSServiceName: sagemaker.application-autoscaling.amazonaws.com
          - Sid: CodePipelineAccess
            Action:
            - codepipeline:PutJobFailureResult
            - codepipeline:PutJobSuccessResult
            - codepipeline:GetPipelineState
            - codepipeline:PutApprovalResult
            Effect: Allow
            Resource: '*'
          - Sid: EndpointAutoScaling
            Action:
            - application-autoscaling:DescribeScalableTargets
            - application-autoscaling:RegisterScalableTarget
            - application-autoscaling:DescribeScalableTargets
            - application-autoscaling:DeregisterScalableTarget
            - application-autoscaling:PutScalingPolicy
            - application-autoscaling:DescribeScalingPolicies
            - application-autoscaling:DescribeScalingActivities
            - application-autoscaling:DeleteScalingPolicy
            - application-autoscaling:DeleteScheduledAction
            Effect: Allow
            Resource: '*'
